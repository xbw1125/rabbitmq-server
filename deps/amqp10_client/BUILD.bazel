load("@bazel-erlang//:bazel_erlang_lib.bzl", "erlang_lib", "test_erlang_lib")
load("@bazel-erlang//:ct.bzl", "ct_suite")
load("//:rabbitmq_home.bzl", "rabbitmq_home")
load("//:rabbitmq_run.bzl", "rabbitmq_run")
load("//:rabbitmq.bzl", "APP_VERSION")

APP_NAME = "amqp10_client"

APP_DESCRIPTION = "AMQP 1.0 client from the RabbitMQ Project"

APP_MODULE = "amqp10_client_app"

EXTRA_APPS = [
    "ssl",
    "inets",
    "crypto",
]

ERLC_OPTS = [
    # "-Dnowarn_deprecated_gen_fsm",
]

TEST_ERLC_OPTS = [
    "+nowarn_export_all",
]

BUILD_DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
]

DEPS = [
    "//deps/amqp10_common:bazel_erlang_lib",
]

erlang_lib(
    app_description = APP_DESCRIPTION,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    build_deps = BUILD_DEPS,
    erlc_opts = ERLC_OPTS,
    extra_apps = EXTRA_APPS,
    deps = DEPS,
)

test_erlang_lib(
    app_description = APP_DESCRIPTION,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    build_deps = BUILD_DEPS,
    erlc_opts = ERLC_OPTS,
    extra_apps = EXTRA_APPS,
    deps = DEPS,
)

ct_suite(
    erlc_opts = TEST_ERLC_OPTS,
    suite_name = "msg_SUITE",
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
    },
    deps = DEPS,
)

rabbitmq_home(
    name = "broker-for-tests-home",
    plugins = [
        "//deps/rabbit:bazel_erlang_lib",
        "//deps/rabbitmq_amqp1_0:bazel_erlang_lib",
    ],
)

rabbitmq_run(
    name = "rabbitmq-for-tests-run",
    home = ":broker-for-tests-home",
)

ct_suite(
    size = "large",
    additional_hdrs = [
        "src/amqp10_client.hrl",
    ],
    additional_srcs = [
        "test/activemq_ct_helpers.erl",
        "test/mock_server.erl",
    ],
    data = [
        "@activemq//:bin_dir",
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = TEST_ERLC_OPTS + [
        "-I deps/amqp10_client",
    ],
    suite_name = "system_SUITE",
    # does not pass remotely. marking exclusive until we have logs from remote runs
    tags = ["exclusive"],
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/amqp10_client/rabbitmq-for-tests-run",
        "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/amqp10_client/broker-for-tests-home/sbin/rabbitmqctl",
        "RABBITMQ_PLUGINS": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/amqp10_client/broker-for-tests-home/sbin/rabbitmq-plugins",
        "ACTIVEMQ": "$TEST_SRCDIR/$TEST_WORKSPACE/external/activemq/bin/activemq",
    },
    tools = [
        ":rabbitmq-for-tests-run",
    ],
    runtime_deps = [
        "//deps/rabbitmq_cli:elixir_as_bazel_erlang_lib",
        "//deps/rabbitmq_cli:rabbitmqctl",
        "@rabbitmq_ct_client_helpers//:bazel_erlang_lib",
    ],
    deps = DEPS + [
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
)
