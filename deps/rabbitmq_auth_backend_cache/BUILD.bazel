load("@bazel-erlang//:bazel_erlang_lib.bzl", "erlang_lib", "test_erlang_lib")
load("@bazel-erlang//:ct.bzl", "ct_suite")
load("//:rabbitmq_home.bzl", "rabbitmq_home")
load("//:rabbitmq_run.bzl", "rabbitmq_run")
load("//:rabbitmq.bzl", "APP_VERSION")

APP_ENV = """[
	    {cache_ttl,      15000},
	    {cache_module,   rabbit_auth_cache_ets},
	    {cache_module_args, []},
	    {cached_backend, rabbit_auth_backend_internal},
	    {cache_refusals, false}
	  ]"""

APP_NAME = "rabbitmq_auth_backend_cache"

APP_DESCRIPTION = "RabbitMQ Authentication Backend cache"

APP_MODULE = "rabbit_auth_backend_cache_app"

DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//deps/rabbit:bazel_erlang_lib",
]

FIRST_SRCS = [
    "src/rabbit_auth_cache.erl",
]

erlang_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    first_srcs = FIRST_SRCS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

test_erlang_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    app_version = APP_VERSION,
    first_srcs = FIRST_SRCS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

TEST_ERLC_OPTS = [
    "+nowarn_export_all",
]

rabbitmq_home(
    name = "broker-for-tests-home",
    plugins = [
        "//deps/rabbit:bazel_erlang_lib",
        ":bazel_erlang_lib",
    ],
)

rabbitmq_run(
    name = "rabbitmq-for-tests-run",
    home = ":broker-for-tests-home",
)

ct_suite(
    data = [
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = TEST_ERLC_OPTS,
    suite_name = "config_schema_SUITE",
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_cache/rabbitmq-for-tests-run",
        "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_cache/broker-for-tests-home/sbin/rabbitmqctl",
        "RABBITMQ_PLUGINS": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_cache/broker-for-tests-home/sbin/rabbitmq-plugins",
    },
    tools = [
        ":rabbitmq-for-tests-run",
    ],
    runtime_deps = [
        "//deps/rabbitmq_cli:elixir_as_bazel_erlang_lib",
        "//deps/rabbitmq_cli:rabbitmqctl",
        "@rabbitmq_ct_client_helpers//:bazel_erlang_lib",
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
)

ct_suite(
    data = [
        "@rabbitmq_ct_helpers//tools/tls-certs:Makefile",
        "@rabbitmq_ct_helpers//tools/tls-certs:openssl.cnf.in",
    ],
    erlc_opts = TEST_ERLC_OPTS,
    suite_name = "rabbit_auth_backend_cache_SUITE",
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
        "RABBITMQ_RUN": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_cache/rabbitmq-for-tests-run",
        "RABBITMQCTL": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_cache/broker-for-tests-home/sbin/rabbitmqctl",
        "RABBITMQ_PLUGINS": "$TEST_SRCDIR/$TEST_WORKSPACE/deps/rabbitmq_auth_backend_cache/broker-for-tests-home/sbin/rabbitmq-plugins",
    },
    tools = [
        ":rabbitmq-for-tests-run",
    ],
    runtime_deps = [
        "//deps/rabbitmq_cli:elixir_as_bazel_erlang_lib",
        "//deps/rabbitmq_cli:rabbitmqctl",
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
    deps = [
        "//deps/rabbit_common:bazel_erlang_lib",
    ],
)

ct_suite(
    erlc_opts = TEST_ERLC_OPTS,
    suite_name = "rabbit_auth_cache_SUITE",
    test_env = {
        "RABBITMQ_CT_SKIP_AS_ERROR": "true",
    },
    runtime_deps = [
        "@rabbitmq_ct_helpers//:bazel_erlang_lib",
    ],
)
